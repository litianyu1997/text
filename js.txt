JavaScript:简称：js
js分三个部分
ECMAScript 标准  js的基本的语法
DOM  Document Object Model 文档对象模型
BOM  Browser OBject Model 浏览器对象模型
是一门脚本语言
是一门解释性语言
是一门动态类型语言
是一门基于对象的语言

编译语言：需要把代码翻译成计算机所认知的二进制语言，才能够执行
脚本语言：不需要编译，直接执行
常见的脚本语言：t-sql（数据库），cmd

HTML：是标记语言，展示数据
CSS：美化页面
JavaScript：用户和浏览器交互
1.网页特效
2.服务端开发（Node.js）
3.命令行工具（Node.js）
4.桌面程序（Electron）
5.App（Cordova）
6.控制硬件-物联网（Ruff）
7.游戏开发（cocos2d-js）

js的代码可以分三个地方写
1.在html的文件中，script的标签中写js代码
2.js代码的可以在html的标签中写
3.在js文件中可以写js代码，但是需要在html的

js代码的注意问题
1.在一对script的标签中有错误的js代码，那么该错误的代码后面的js代码不会执行
2.如果第一对的script标签中有错误，不会影响后面的script标签中的js代码执行
3.script的标签中可以写什么内容
type=“test/javascript”是标准写法
或者写language="JavaScrpit"都可以
4.script标签在页面中可以出现多对
5.script标签一般是放在body的标签的最后，有的时候会在head标签中
6.如果script标签是引入外部js文件的作用，那么这对标签中不要写任何的js代码，如果要写，重新写一对script标签，里面写代码

js中存储数据使用变量的方式（名字，值--->数据）
js中声明的变量都用var--->存储数据，数据应该有对应的数据类型

存储一个数字10
变量的声明及赋值
var num=10；
存储一个名字
var name='小黑'；

变量作用：用来操作数据的（可以存储，可以读取）
变量声明（有var 有变量名字，没有值）
变量初始化（有var 有变量名字，有值）

变量声明的方式
var 变量名字；
var number；//变量的声明，此事时没有赋值的
//一次性声明多个变量
var x,y,z,a,b；//都是声明，没有赋值

变量的初始化（变量声明的同时并且赋值了）
var 变量名 = 值；
var number = 10；//存储一个数字10
var name = "小黑"；//存储一个名字‘小黑’
var flag = true；//存储真（true）
var nll = null；//存储一个null--->相当于是空
var obj = new Object（）；//存储一个对象

基本代码的规范
js中声明变量都用var
js中的每一行代码结束都应该有分号；
js中的大小写是区分的
js中的字符串可以使用单引号，也可以使用双引号

变量名的注意问题---变量名的命名规范
1.变量的名字要有意义
2.变量名有一定的规范：一般以字母，$符号，下划线开头，中间或者后面可以有$符号，字母，数字
3.变量名一般都是小写的
4.变量名如果是多个单词，抵押给单词的首字母是小写的，后面的所有的单词的首字母都是大写的，这种命名方式称为：驼峰命名法（var bigNumber=10；）
5.不能使用关键字（系统自带的一些单词不能用）

var num = 10//声明了一个num的变量储存了一个10
alert(num)；//弹窗
console.log(num);//把内容输出在浏览器的控制台中

//声明多个变量然后一个个的赋值
var num1,num2,num3;//声明
//依次的赋值
num1 = 10;
num2 = 20;
num3 = 30;
//声明多个变量并赋值
var num1 = 10,num2 = 20,num3 = 30;

//变量的交换的第一个思路：使用第三方的变量进行交换
var num1 = 10;
var num2 = 20;
//把num1这个变量的值取出来放在temp变量中
var temp = num1;
//把num2这个变量的值取出来放在num1变量中
num1 = num2；
//把temp变量的值取出来放在num2变量中
num2 = temp
console.log(num1);//20
console.log(num2);//10

//第二种方式交换：一般适用数字的交换
var num1 = 10;
var num2 = 20;
//把num1的变量中的值和num2变量中的值取出来相加，重新赋值给num1这个变量
num1 = num1 + num2;//30
//num1便变量的值取出来，相减的结果重新赋值给num2
num2 = num1 - num2;//10
//把num1变量的值取出来，相减的结果重新赋值给num1
num1 = num1 - num2;//20
console.log(num1,num2);
//Ctrl+Alt+L--->格式化代码（设置代码有很好的格式，代码是错误的，这个快捷键是没有效果的）

//变量的名字不能重名

//扩展的变量的交换---位运算
var num1 = 10;
var num2 = 20;
num1 = num1 ^ num2;
num2 = num1 ^ num2;
num1 = num1 ^ num2;
console.log(num1,num2);

//单行注释：一般用在一行代码的上面
/*多行注释：一般用在函数或者是一段代码的上面*/
//代码中如果没有注释，不规范
//注释后的代码不执行了

//js中的原始数据类型：number,string,boolean,null,undefined,object
/*number:数字类型（整数和小数）
*string:字符串类型（的值一般都是用单引号或者是双引号括起来）"34"
*boolean:布尔类型（值只有两个，true（真1），false（假0））
*null:空类型，值只有一个：null，一个对象指向为空了，此时可以赋值为null
*undefined:未定义，值只有一个：undefined
*什么情况下的结果是undefined
*var num;
*console.log(num);
*变量声明了，没有赋值，结果是undefined
*函数没有明确返回值，如果接收了，结果也是undefined
*如果一个变量的结果是undefined和一个数字进行计算，结果：NaN不是一个数字，也没有意义
*object:对象
**/

//使用typeof来获取这个变量的数据类型
//typeof的使用的语法
//type of 变量名
//type of（变量名）
//当一个变量赋值为null时，该变量里面存储的是一个对象
//var nll = null；
//console.log(typeof nll)//object

数字类型：整数和小数
num = 20;整数
num = 98.76;小数（其他的语言中，浮点形---单精度，双精度浮点）
所有的数字都是属于number类型
其他的语言：
整数类型：int
单精度浮点型：float
双精度浮点型：double

/*
*js中可以表示哪些进制
*var num = 10//十进制
*var num2 = 012//八进制
*var num3 = 0x123//十六进制
**/

//数字类型有范围：最小值和最大值
console.log(Number.MAX_VALUE);//数字的最大值
console.log(Number.MIM_VALUE);//数字的最小值

//不要用小数去验证小数
//无穷大：Infinity
//无穷小：-Infinity
//不要用NaN验证是不是NaN
//如何验证这个结果是不是NaN，应该使用isNaN（值或者是变量）
var num;
console.log(isNaN(num))//false
var sum = num + 10
console.log(isNaN(sum)//true)









